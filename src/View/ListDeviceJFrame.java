/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.DeviceModel.Device;
import Model.DeviceModel.Device_Type;
import Model.DeviceModel.ListDevice;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class ListDeviceJFrame extends javax.swing.JFrame {
        Device device;
        ListDevice listDevice;
        Device_Type deviceType;
        
        ArrayList<Device> devices = new ArrayList<Device>();
    /**
     * Creates new form ListDeviceJFrame
     */
    public ListDeviceJFrame() {
        initComponents();
        
        device = new Device();
        deviceType = new Device_Type();
                listDevice = new ListDevice();
        DefaultTableModel defaultTableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            
        };
        
        jTable1.setModel(defaultTableModel);
        
        defaultTableModel.addColumn("ID Device");
        defaultTableModel.addColumn("Name Device");
        defaultTableModel.addColumn("ID Device Type");
        defaultTableModel.addColumn("Price");
        
        List<Device> devices = listDevice.getDevicesFromDatabase();
        
        for (Device device : devices){
            defaultTableModel.addRow(new Object[]{device.getIdDevice(), device.getNameDevice(), device.getDeviceType().getIdType(), device.getPrice()});
        }
        
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            // Hiển thị thông tin các trường khác nếu cần, không cần hiển thị `idDevice`
            jTextField1.setText(jTable1.getValueAt(selectedRow, 1).toString());  // nameDevice
            jTextField2.setText(jTable1.getValueAt(selectedRow, 2).toString());  // idType
            jTextField3.setText(jTable1.getValueAt(selectedRow, 3).toString());  // price
        }
    }
});
        
    }
private void refreshTable() {
    // Khởi tạo lại mô hình bảng với dữ liệu mới
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Xóa toàn bộ dữ liệu cũ trong bảng

    ListDevice listDevice = new ListDevice();
    ArrayList<Device> devices = listDevice.getDevicesFromDatabase(); // Lấy danh sách thiết bị từ cơ sở dữ liệu

    // Duyệt qua danh sách thiết bị và thêm vào bảng
    for (Device device : devices) {
        Object[] row = {
            device.getIdDevice(),
            device.getNameDevice(),
            device.getDeviceType().getIdType(),
            device.getPrice()
        };
        model.addRow(row); // Thêm từng dòng vào bảng
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Name Device");

        jLabel2.setText("ID Device Type");

        jLabel3.setText("Price");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("INFORMATION DEVICE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    String name = jTextField1.getText().trim();
    String idType = jTextField2.getText().trim();
    double price;

    try {
        price = Double.parseDouble(jTextField3.getText().trim());

        ListDevice listDevice = new ListDevice();
        listDevice.addDevice(name, idType, price);

        JOptionPane.showMessageDialog(this, "Thêm thiết bị thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");

        // Cập nhật bảng giao diện
        refreshTable();

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập giá hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
//            // Kiểm tra xem dòng nào trong bảng `jTable1` đã được chọn
//    int selectedRow = jTable1.getSelectedRow();
//    if (selectedRow != -1) {
//        // Lấy `id_device` từ bảng (giả sử ID thiết bị là cột đầu tiên)
//        String idDevice = jTable1.getValueAt(selectedRow, 0).toString();
//
//        // Xác nhận với người dùng trước khi xóa
//        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thiết bị này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
//        
//        if (confirm == JOptionPane.YES_OPTION) {
//            // Khởi tạo đối tượng `ListDevice` và gọi phương thức `deleteDevice`
//            ListDevice listDevice = new ListDevice();
//            listDevice.deleteDevice(idDevice);
//            
//            // Thông báo xóa thành công
//            JOptionPane.showMessageDialog(this, "Xóa thiết bị thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//            
//            // Xóa dòng đã xóa khỏi bảng giao diện
//            ((DefaultTableModel) jTable1.getModel()).removeRow(selectedRow);
//            
//            // Xóa trắng các ô nhập liệu sau khi xóa
//            jTextField1.setText("");
//            jTextField2.setText("");
//            jTextField3.setText("");
//        }
//    } else {
//        // Thông báo nếu chưa chọn dòng nào trong bảng
//        JOptionPane.showMessageDialog(this, "Vui lòng chọn thiết bị cần xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
//    }

    // Kiểm tra xem dòng nào trong bảng `jTable1` đã được chọn
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        // Lấy `id_device` từ bảng (giả sử ID thiết bị là cột đầu tiên)
        String idDevice = jTable1.getValueAt(selectedRow, 0).toString();

        // Xác nhận với người dùng trước khi xóa
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa thiết bị này không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Khởi tạo đối tượng `ListDevice` và gọi phương thức `deleteDevice`
            ListDevice listDevice = new ListDevice();
            listDevice.deleteDevice(idDevice);

            // Gọi phương thức reorderDeviceIds để cập nhật lại id_device đúng thứ tự
            listDevice.reorderDeviceIds();
            
            // Thông báo xóa thành công
            JOptionPane.showMessageDialog(this, "Xóa thiết bị thành công và cập nhật lại ID!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            
            // Xóa dòng đã xóa khỏi bảng giao diện
            ((DefaultTableModel) jTable1.getModel()).removeRow(selectedRow);
            
            // Cập nhật lại bảng giao diện sau khi cập nhật ID
            refreshTable();

            // Xóa trắng các ô nhập liệu sau khi xóa
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
        }
    } else {
        // Thông báo nếu chưa chọn dòng nào trong bảng
        JOptionPane.showMessageDialog(this, "Vui lòng chọn thiết bị cần xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            // Kiểm tra xem dòng nào trong bảng `jTable1` đã được chọn
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        // Lấy `idDevice` từ bảng (giả sử ID thiết bị là cột đầu tiên)
        String idDevice = jTable1.getValueAt(selectedRow, 0).toString();
        
        // Lấy thông tin cập nhật từ các trường nhập liệu
        String name = jTextField1.getText().trim();
        String idType = jTextField2.getText().trim();
        double price;

        try {
            // Chuyển giá từ text thành số
            price = Double.parseDouble(jTextField3.getText().trim());

            // Cập nhật thiết bị trong database
            ListDevice listDevice = new ListDevice();
            listDevice.updateDevice(idDevice, name, idType, price);

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Cập nhật thiết bị thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Cập nhật lại bảng giao diện sau khi sửa
            refreshTable();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        // Thông báo nếu chưa chọn dòng nào trong bảng
        JOptionPane.showMessageDialog(this, "Vui lòng chọn thiết bị cần cập nhật!", "Lỗi", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
            String idDevice = jTextField4.getText().trim();
    
    if (idDevice.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập ID thiết bị", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    ListDevice listDevice = new ListDevice();
    Device device = listDevice.findDeviceByIdInDatabase(idDevice);

    if (device != null) {
        // Giả sử bạn có một bảng `jTable1` để hiển thị dữ liệu thiết bị
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        // Xóa dữ liệu cũ trong bảng
        model.setRowCount(0);
        
        // Thêm hàng mới vào bảng với thông tin của thiết bị
        model.addRow(new Object[] {
            device.getIdDevice(),
            device.getNameDevice(),
            device.getDeviceType().getNameType(),
            device.getPrice(),
            // Thêm các thuộc tính khác nếu cần
        });
    } else {
        JOptionPane.showMessageDialog(this, "Không tìm thấy thiết bị với ID: " + idDevice, "Kết quả", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListDeviceJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListDeviceJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListDeviceJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListDeviceJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListDeviceJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
